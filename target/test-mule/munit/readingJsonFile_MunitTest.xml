<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="Implementation -suite.xml" />
	<munit:test name="Success-scenario-test" doc:id="76e0906c-45db-4eac-bb5f-5fe1cfb40590" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Read json file" doc:id="7410e167-62c9-4429-8452-f76c2b19beb3" processor="file:read" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="d600fa08-f2d9-4aee-8cf8-3d23cc1d2c11" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output text/json  --- readUrl('classpath://readJsonFiletest\mock_payload.dwl')]" mediaType="text/json " encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://readJsonFiletest\mock_attributes.dwl')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:spy doc:name="Spy payload" doc:id="e035f823-2dc3-451e-a0f6-aab1ea7a3004" processor="ee:transform" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c0b3f519-cfca-4931-959b-0dbf7772fb7b" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:before-call >
					<munit-tools:assert doc:name="Assert payload" doc:id="ff0a6cc4-e1cf-4697-8e1f-af67022306e3" message="The payload does not match" >
						<munit-tools:that ><![CDATA[#[%dw 2.0
import readJsonFiletest::spy_assert_payload
---
spy_assert_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
					</munit-tools:assert>
				</munit-tools:before-call>
				<munit-tools:after-call >
					<munit-tools:assert doc:name="Assert payload" doc:id="7ad472e0-ed2d-42d6-a8d6-111ad2957ee6" message="The payload does not match" >
						<munit-tools:that ><![CDATA[#[%dw 2.0
import readJsonFiletest::spy_assert_payload1
---
spy_assert_payload1::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
					</munit-tools:assert>
				</munit-tools:after-call>
			</munit-tools:spy>
			<munit:set-event doc:name="Set Input" doc:id="7d824132-12a3-4d3f-9ad5-e282eed650cd" >
				<munit:payload value="#[output text/json  --- readUrl('classpath://readJsonFiletest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="text/json " />
				<munit:attributes value="#[readUrl('classpath://readJsonFiletest\set-event_attributes.dwl')]" />
			</munit:set-event>
			<munit-tools:mock-when doc:name="Mock when" doc:id="5c9a268a-37aa-4ab4-b460-c5238162aec0" processor="http:request" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Request json_to_csv Api" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="/jsontocsv" attributeName="path" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output text/json  --- readUrl('classpath://readJsonFiletest\mock_payload2.dwl')]" mediaType="text/json" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to readJsonFile" doc:id="40bc1a44-3a46-4d7b-a73e-0525acd74110" name="readJsonFile" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="8362aee9-4bf1-4789-bffd-a5f5d94e3f35" message="The payload does not match" >
				<munit-tools:that ><![CDATA[#[%dw 2.0
import readJsonFiletest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify payload" doc:id="a643668e-8850-4069-a75b-3e9fd3e9d09a" processor="ee:transform" times="1" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c0b3f519-cfca-4931-959b-0dbf7772fb7b" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="Error-scenario-test" doc:id="4a5afccc-3df3-45a1-a242-a7f2ef084801">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock Read json file" doc:id="df20044a-3950-4622-9cfc-3eaef82705a1" processor="file:read">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="d600fa08-f2d9-4aee-8cf8-3d23cc1d2c11" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:error typeId="HTTP:CONNECTIVITY" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when" doc:id="c26fd40a-48f4-4717-b45d-dfc34a8df864" processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Request json_to_csv Api" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="/jsontocsv" attributeName="path" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload value="#[output text/json  --- readUrl('classpath://readJsonFiletest\mock_payload2.dwl')]" mediaType="text/json" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
			<try doc:name="Try" doc:id="65b90b3d-9129-4cbf-94fb-af4373a0c308">
				<flow-ref doc:name="Flow-ref to readJsonFile" doc:id="36a0e2e8-4b62-4caf-96bc-8cc28379d4a1" name="readJsonFile" />
				<error-handler>
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="23d91849-e60e-4486-8ebe-ca65e9d72f6d">
						<logger level="INFO" doc:name="Logger" doc:id="cffcdd16-de29-4e93-a5b0-28bb35dac4e3" message="Continue...." />
					</on-error-continue>
				</error-handler>
			</try>
		</munit:execution>
		<munit:validation>
			<munit-tools:verify-call doc:name="Verify Error Handler" doc:id="6afdab18-07a4-429c-a7b2-b093a82c0f5b" processor="file:move" times="1">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Move To Error Folder" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="File_Config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="Move To Error Folder" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="File_Config" attributeName="config-ref" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>


</mule>
